@startuml
abstract class AbstractFigure{
	fListener : FigureChangeListener
	serialVersionUID : long
	abstractFigureSerializedDataVersion : int
	AbstractFigure()
	moveBy(int dx, int dy) : void
	displayBox(Point origin, Point corner) : void
	figures() : FigureEnumeration
	size() : Dimension
	isEmpty() : boolean
	findFigureInside(int x, int y) : Figure
	containsPoint(int x, int y) : boolean
	displayBox(Rectangle r) : void
	includes(Figure figure) : boolean
	decompose() : FigureEnumeration
	addToContainer(FigureChangeListener c) : void
	removeFromContainer(FigureChangeListener c) : void
	addFigureChangeListener(FigureChangeListener l) : void
	removeFigureChangeListener(FigureChangeListener l) : void
	listener() : FigureChangeListener
	release() : void
	invalidate() : void
	willChange() : void
	changed() : void
	center() : Point
	canConnect() : boolean
	connectionInsets() : Insets
	connectorAt(int x, int y) : Connector
	connectorVisibility(boolean isVisible) : void
	connectedTextLocator(Figure text) : Locator
	getAttribute(String name) : Object
	setAttribute(String name, Object value) : void
	clone() : Object
	write(StorableOutput dw) : void
	read(StorableInput dr) : void
	basicMoveBy(int dx, int dy) : void
	basicDisplayBox(Point origin, Point corner) : void
	displayBox() : Rectangle
	handles() : Vector
}
interface FigureChangeListener{
	figureInvalidated(FigureChangeEvent e) : void
	figureChanged(FigureChangeEvent e) : void
	figureRemoved(FigureChangeEvent e) : void
	figureRequestRemove(FigureChangeEvent e) : void
	figureRequestUpdate(FigureChangeEvent e) : void
}
abstract class CompositeFigure{
	fFigures : Vector
	serialVersionUID : long
	compositeFigureSerializedDataVersion : int
	CompositeFigure()
	add(Figure figure) : Figure
	addAll(Vector newFigures) : void
	remove(Figure figure) : Figure
	removeAll(Vector figures) : void
	removeAll() : void
	orphan(Figure figure) : Figure
	orphanAll(Vector newFigures) : void
	replace(Figure figure, Figure replacement) : void
	sendToBack(Figure figure) : void
	bringToFront(Figure figure) : void
	draw(Graphics g) : void
	figureAt(int i) : Figure
	figures() : FigureEnumeration
	figureCount() : int
	figuresReverse() : FigureEnumeration
	findFigure(int x, int y) : Figure
	findFigure(Rectangle r) : Figure
	findFigureWithout(int x, int y, Figure without) : Figure
	findFigure(Rectangle r, Figure without) : Figure
	findFigureInside(int x, int y) : Figure
	findFigureInsideWithout(int x, int y, Figure without) : Figure
	includes(Figure figure) : boolean
	basicMoveBy(int x, int y) : void
	release() : void
	figureInvalidated(FigureChangeEvent e) : void
	figureRequestRemove(FigureChangeEvent e) : void
	figureRequestUpdate(FigureChangeEvent e) : void
	figureChanged(FigureChangeEvent e) : void
	figureRemoved(FigureChangeEvent e) : void
	write(StorableOutput dw) : void
	read(StorableInput dr) : void
	readObject(ObjectInputStream s) : void
}
abstract class DecoratorFigure{
	fComponent : Figure
	serialVersionUID : long
	decoratorFigureSerializedDataVersion : int
	DecoratorFigure()
	DecoratorFigure(Figure figure)
	initialize() : void
	connectionInsets() : Insets
	canConnect() : boolean
	containsPoint(int x, int y) : boolean
	decorate(Figure figure) : void
	peelDecoration() : Figure
	displayBox() : Rectangle
	basicDisplayBox(Point origin, Point corner) : void
	draw(Graphics g) : void
	findFigureInside(int x, int y) : Figure
	handles() : Vector
	includes(Figure figure) : boolean
	moveBy(int x, int y) : void
	basicMoveBy(int x, int y) : void
	release() : void
	figureInvalidated(FigureChangeEvent e) : void
	figureChanged(FigureChangeEvent e) : void
	figureRemoved(FigureChangeEvent e) : void
	figureRequestUpdate(FigureChangeEvent e) : void
	figureRequestRemove(FigureChangeEvent e) : void
	figures() : FigureEnumeration
	decompose() : FigureEnumeration
	setAttribute(String name, Object value) : void
	getAttribute(String name) : Object
	connectedTextLocator(Figure text) : Locator
	connectorAt(int x, int y) : Connector
	connectorVisibility(boolean isVisible) : void
	write(StorableOutput dw) : void
	read(StorableInput dr) : void
	readObject(ObjectInputStream s) : void
}
interface Figure{
	moveBy(int dx, int dy) : void
	basicDisplayBox(Point origin, Point corner) : void
	displayBox(Point origin, Point corner) : void
	displayBox() : Rectangle
	draw(Graphics g) : void
	handles() : Vector
	size() : Dimension
	center() : Point
	isEmpty() : boolean
	figures() : FigureEnumeration
	findFigureInside(int x, int y) : Figure
	containsPoint(int x, int y) : boolean
	clone() : Object
	displayBox(Rectangle r) : void
	includes(Figure figure) : boolean
	decompose() : FigureEnumeration
	addToContainer(FigureChangeListener c) : void
	removeFromContainer(FigureChangeListener c) : void
	listener() : FigureChangeListener
	addFigureChangeListener(FigureChangeListener l) : void
	removeFigureChangeListener(FigureChangeListener l) : void
	release() : void
	invalidate() : void
	willChange() : void
	changed() : void
	canConnect() : boolean
	connectorAt(int x, int y) : Connector
	connectorVisibility(boolean isVisible) : void
	connectionInsets() : Insets
	connectedTextLocator(Figure text) : Locator
	getAttribute(String name) : Object
	setAttribute(String name, Object value) : void
}
class FigureChangeEvent{
	fRectangle : Rectangle
	fgEmptyRectangle : Rectangle
	FigureChangeEvent(Figure source, Rectangle r)
	FigureChangeEvent(Figure source)
	getFigure() : Figure
	getInvalidatedRectangle() : Rectangle
}
interface FigureEnumeration{
	nextFigure() : Figure
}
interface Handle{
	locate() : Point
	invokeStart(int x, int y, Drawing drawing) : void
	invokeStart(int x, int y, DrawingView view) : void
	invokeStep(int dx, int dy, Drawing drawing) : void
	invokeStep(int x, int y, int anchorX, int anchorY, DrawingView view) : void
	invokeEnd(int x, int y, int anchorX, int anchorY, DrawingView view) : void
	invokeEnd(int dx, int dy, Drawing drawing) : void
	owner() : Figure
	displayBox() : Rectangle
	containsPoint(int x, int y) : boolean
	draw(Graphics g) : void
}
interface Layoutable{
	layout() : void
	setLayouter(Layouter newLayouter) : void
	getLayouter() : Layouter
}
interface Layouter{
	calculateLayout(Point origin, Point corner) : Rectangle
	layout(Point origin, Point corner) : Rectangle
	setInsets(Insets newInsets) : void
	getInsets() : Insets
}
interface Locator{
	locate(Figure owner) : Point
}
class StandardDrawing{
	fListeners : Vector
	fDrawingLockHolder : Thread
	serialVersionUID : long
	drawingSerializedDataVersion : int
	StandardDrawing()
	addDrawingChangeListener(DrawingChangeListener listener) : void
	removeDrawingChangeListener(DrawingChangeListener listener) : void
	drawingChangeListeners() : Enumeration
	remove(Figure figure) : Figure
	figureRequestRemove(FigureChangeEvent e) : void
	figureInvalidated(FigureChangeEvent e) : void
	figureRequestUpdate(FigureChangeEvent e) : void
	handles() : Vector
	displayBox() : Rectangle
	basicDisplayBox(Point p1, Point p2) : void
	lock() : void
	unlock() : void
	readObject(ObjectInputStream s) : void
}
class StandardLayouter{
	myLayoutable : Layoutable
	myInsets : Insets
	serialVersionUID : long
	StandardLayouter()
	StandardLayouter(Layoutable newLayoutable)
	getLayoutable() : Layoutable
	setLayoutable(Layoutable newLayoutable) : void
	calculateLayout(Point origin, Point corner) : Rectangle
	layout(Point origin, Point corner) : Rectangle
	read(StorableInput dr) : void
	write(StorableOutput dw) : void
	setInsets(Insets newInsets) : void
	getInsets() : Insets
}
interface Storable{
	write(StorableOutput dw) : void
	read(StorableInput dr) : void
}
class StorableInput{
	fTokenizer : StreamTokenizer
	fMap : Vector
	StorableInput(InputStream stream)
	readStorable() : Storable
	readString() : String
	readInt() : int
	readColor() : Color
	readDouble() : double
	readBoolean() : boolean
	makeInstance(String className) : Object
	map(Storable storable) : void
	retrieve(int ref) : Storable
}
class StorableOutput{
	fStream : PrintWriter
	fMap : Vector
	fIndent : int
	StorableOutput(OutputStream stream)
	writeStorable(Storable storable) : void
	writeInt(int i) : void
	writeColor(Color c) : void
	writeDouble(double d) : void
	writeBoolean(boolean b) : void
	writeString(String s) : void
	close() : void
	mapped(Storable storable) : boolean
	map(Storable storable) : void
	writeRef(Storable storable) : void
	incrementIndent() : void
	decrementIndent() : void
	startNewLine() : void
	space() : void
}
class boolean{
}
class int{
}
class long{
}
class double{
}
class Object{
}
class String{
}
class Thread{
}
CompositeFigure --|> AbstractFigure
DecoratorFigure --|> AbstractFigure
Figure --> FigureChangeListener
FigureChangeListener --> FigureChangeEvent
FigureChangeEvent --> Figure
FigureEnumeration --> Figure
Handle --> Figure
Layoutable --|> Figure
Layoutable --> Layouter
Locator --> Figure
StandardDrawing --|> CompositeFigure
StandardLayouter --> Layoutable
StandardLayouter ..|> Layouter
Locator --|> Storable
StorableInput --> Storable
StorableOutput --> Storable
AbstractFigure --> boolean
CompositeFigure --> boolean
DecoratorFigure --> boolean
Figure --> boolean
Handle --> boolean
StorableInput --> boolean
StorableOutput --> boolean
AbstractFigure --> int
CompositeFigure --> int
DecoratorFigure --> int
Figure --> int
Handle --> int
StandardDrawing --> int
StorableInput --> int
StorableOutput --> int
AbstractFigure --> long
CompositeFigure --> long
DecoratorFigure --> long
StandardDrawing --> long
StandardLayouter --> long
StorableInput --> double
StorableOutput --> double
AbstractFigure --> Object
DecoratorFigure --> Object
Figure --> Object
StorableInput --|> Object
StorableOutput --|> Object
AbstractFigure --> String
DecoratorFigure --> String
Figure --> String
StorableInput --> String
StorableOutput --> String
StandardDrawing --> Thread
@enduml